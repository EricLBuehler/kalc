#x^3+px+q=0, depressed cubic :c
dc(p,q)=cbrt(-q/2+sqrt(q^2/4+p^3/27))+cbrt(-q/2-sqrt(q^2/4+p^3/27))

#complex expansion of fibonacci sequence
fibonacci(x)=(φ^x-(-1/φ)^x)/sqrt(5)

#example functions used later on
f(x)=x^3-x
f'(x)=3x^2-1

#tangent line at point p of function f(x)
t(x,p)=f'(p)x+f(p)-f'(p)p

#first principles d/dx definition
f'(x,h)=(f(x+h)-f(x))/h

#newtons method to find 0, off of f(x)
n(x)=x-f(x)/f'(x)

#minimum distance between b^x and log(b,x) over b where b>=root(e,e)
minexp(x)=sqrt(2)log(x,eln(x))

#minimum distance between left and right side of x^-(2n+1) over n(n is natural)
minpow(x)=2sqrt(root(x,2x+2)^2+root(x,2x+2)^(-2*x))

#minimum distance between sec(a*x) and its inverse, asec(x)/a
minsec(x)=sqrt(2)(sec(asin((sqrt(x^2+4)-x)/2))-(asin((sqrt(x^2+4)-x)/2)/x))


#following is minimum distance between the center curve and curve right of tan(a*x)
#distance between (x,tan(ax)) and (pi/a-x,-tan(ax))
disttan(x,a)=sqrt((2x-pi/a)^2+4tan(ax)^2)
#derivitive of above set to 0 simplified
mintan(x,a)=x+a*sin(ax)/cos(ax)^3-pi/(2a)
#derivitive of above to find 0 by newtons method
mintan'(x,a)=a^2((1+2sin(ax)^2)/cos(ax)^4)+1
#modified newtons method to allow graphing along 'a'
n(x,a)=x-mintan(x,a)/mintan'(x,a)
#disttan(n(n(n(n(1/x,x),x),x),x),x) for example will graph it fairly nicely, we start with 1/x to scale properly and not get trapped in a asymptote
#the following graphically shows that it finds the minimum for just tan(c*x) by inputing the following into the calculator as the circles only intersect the other curve once with 1 line going between the 2 points of interest and the other should intersect the 2 circles at the same points while being perpendicular to the other line, you may need to increase the amount of 'n' to increase precision
# c=2 ; a=n(n(n(n(n(1/(2c),c),c),c),c),c) ; b=disttan(a,c) ; tan(cx) # piecewise({+-sqrt(b^2-(x-a)^2)+tan(ac),x<=(a+b)&&x>=(a-b)}) # piecewise({+-sqrt(b^2-(x-(pi/c-a))^2)-tan(ca),x<=((pi/c-a)+b)&&x>=((pi/c-a)-b)}) # (-2tan(ac)/(pi/c-2a))x+tan(ac)-(-2tan(ac)/(pi/c-2a))a # xcsec(ac)^2-sec(ac)^2*pi/2

#gets the distribution data for the sum of k amounts of n sided die starting at 0, dice(6,2,2) will give the frequency that 2 6 sided die will give a sum of 4 or (p+k) which is 3 so 3/6^2 will give the chance of rolling a sum of 4 from 2 6 sided die, than you can use 'vec(b,dice(6,2,b),0,(6-1)2)' to get the entire distribution data for 2 6 sided die
dice(n,k,p)=piecewise({1,p==0},{0,(0>p)||(p>(k(n-1)))},{sum(a,dice(n,k-1,p-a),0,n-1),1})

# a={1,2,3,4,5,6,5,4,3,2,1} ; b={1,2,3,4,5,6,7,8,9,10,11,12,13} ; vec(c,part(a,c)*part(b,c),1,11) # vec(c,part(a,c)*(13-part(b,c)),1,11)
